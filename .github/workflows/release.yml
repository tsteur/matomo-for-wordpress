# Matomo Release Action
# 
# Required GitHub secrets:
# 
# RELEASE_PASSWORD  |  password that needs to be provided to start the action
# RELEASE_TOKEN  |  github release token to publish
# GIT_EMAIL  |  the git email account which will create the tag version
# GIT_USERNAME  | the git username account which will create the tag version
# SVN_USERNAME  | the svn username to publish a new plugin release
# SVN_PASSWORD  | the svn password to publish a new plugin release

name: Build release

permissions:
  actions: none
  checks: none
  contents: write  # required to create tag and release
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: false
        default: ''
      password:
        description: 'Release password'
        required: true

env:
  RELEASE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: "Check release password"
        if: ${{ github.event.inputs.password != env.RELEASE_PASSWORD }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Release password didn\'t match.')
      - name: "Check if user is allowed"
        if: ${{ github.actor != 'mattab' && github.actor != 'tsteur' && github.actor != 'mattmary' && github.actor != 'justinvelluppillai' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('User is not allowed to release.')
      - uses: actions/checkout@v3
        with:
          lfs: false
          fetch-depth: '0'
          token: ${{ secrets.RELEASE_TOKEN }} # for pushing to protected branch
      - name: Publish new version
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
      - name: Check preconditions, create tag, build and publish release
        id: tag
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]
          then
            version="${{ github.event.inputs.version }}"
          else
            version=$(cat readme.txt | grep -oP "Stable tag: \K(.+)")
          fi
          echo "Version to build: '$version'"

          echo "Check tag does not exist"
          git fetch --all -q 2>/dev/null
            tag_exists=$( git tag --list "$version" )
            if [[ -n "$tag_exists" ]]
            then
              echo "A tag for $tag_exists already exists."
              exit 1
            fi
          
          echo "Creating a tag for $version"
          git tag -a $version HEAD -m "If you download this release, make sure the directory name within the 'wordpress/wp-content' directory is 'matomo' and not for example 'matomo-for-wordpress'. [View changes](https://github.com/matomo-org/matomo-for-wordpress/blob/develop/CHANGELOG.md)" 
          git push origin $version
          
          echo "Deploy"
          chmod +x ./scripts/*.sh
          cd scripts
          ./deploy.sh $version ${{ secrets.SVN_USERNAME }} ${{ secrets.SVN_PASSWORD }}
          cd ..
          
          echo ::set-output name=update::false
        shell: bash
